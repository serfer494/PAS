### YamlMime:ManagedReference
items:
- uid: CONTROLADOR.ControladorInicio
  commentId: T:CONTROLADOR.ControladorInicio
  id: ControladorInicio
  parent: CONTROLADOR
  children:
  - CONTROLADOR.ControladorInicio.Login(System.String,System.String)
  - CONTROLADOR.ControladorInicio.mensaje
  - CONTROLADOR.ControladorInicio.ObtenerTipo(System.String)
  langs:
  - csharp
  - vb
  name: ControladorInicio
  nameWithType: ControladorInicio
  fullName: CONTROLADOR.ControladorInicio
  type: Class
  source:
    remote:
      path: CONTROLADOR/ControladorInicio.cs
      branch: CuartoEntregable
      repo: https://github.com/serfer494/PAS.git
    id: ControladorInicio
    path: ControladorInicio.cs
    startLine: 15
  assemblies:
  - CONTROLADOR
  namespace: CONTROLADOR
  summary: "\nLa clase controlador &quot;Inicio&quot; valida que la informacion de los campos\nsean correctos para poder ingresar al sistema de acuerdo ala informacion de la tabla\nen la tabla &quot;Usuarios&quot; en la base de datos &quot;DBPAS&quot; destinada al sistema.\nDe acuerdo a las caracteristicas de la clase &quot;Validacion&quot;.\n"
  example: []
  syntax:
    content: public class ControladorInicio
    content.vb: Public Class ControladorInicio
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CONTROLADOR.ControladorInicio.mensaje
  commentId: F:CONTROLADOR.ControladorInicio.mensaje
  id: mensaje
  parent: CONTROLADOR.ControladorInicio
  langs:
  - csharp
  - vb
  name: mensaje
  nameWithType: ControladorInicio.mensaje
  fullName: CONTROLADOR.ControladorInicio.mensaje
  type: Field
  source:
    remote:
      path: CONTROLADOR/ControladorInicio.cs
      branch: CuartoEntregable
      repo: https://github.com/serfer494/PAS.git
    id: mensaje
    path: ControladorInicio.cs
    startLine: 17
  assemblies:
  - CONTROLADOR
  namespace: CONTROLADOR
  syntax:
    content: public string mensaje
    return:
      type: System.String
    content.vb: Public mensaje As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CONTROLADOR.ControladorInicio.Login(System.String,System.String)
  commentId: M:CONTROLADOR.ControladorInicio.Login(System.String,System.String)
  id: Login(System.String,System.String)
  parent: CONTROLADOR.ControladorInicio
  langs:
  - csharp
  - vb
  name: Login(String, String)
  nameWithType: ControladorInicio.Login(String, String)
  fullName: CONTROLADOR.ControladorInicio.Login(System.String, System.String)
  type: Method
  source:
    remote:
      path: CONTROLADOR/ControladorInicio.cs
      branch: CuartoEntregable
      repo: https://github.com/serfer494/PAS.git
    id: Login
    path: ControladorInicio.cs
    startLine: 18
  assemblies:
  - CONTROLADOR
  namespace: CONTROLADOR
  syntax:
    content: public string Login(string usuario, string password)
    parameters:
    - id: usuario
      type: System.String
    - id: password
      type: System.String
    return:
      type: System.String
    content.vb: Public Function Login(usuario As String, password As String) As String
  overload: CONTROLADOR.ControladorInicio.Login*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CONTROLADOR.ControladorInicio.ObtenerTipo(System.String)
  commentId: M:CONTROLADOR.ControladorInicio.ObtenerTipo(System.String)
  id: ObtenerTipo(System.String)
  parent: CONTROLADOR.ControladorInicio
  langs:
  - csharp
  - vb
  name: ObtenerTipo(String)
  nameWithType: ControladorInicio.ObtenerTipo(String)
  fullName: CONTROLADOR.ControladorInicio.ObtenerTipo(System.String)
  type: Method
  source:
    remote:
      path: CONTROLADOR/ControladorInicio.cs
      branch: CuartoEntregable
      repo: https://github.com/serfer494/PAS.git
    id: ObtenerTipo
    path: ControladorInicio.cs
    startLine: 32
  assemblies:
  - CONTROLADOR
  namespace: CONTROLADOR
  syntax:
    content: public int ObtenerTipo(string usuario)
    parameters:
    - id: usuario
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Function ObtenerTipo(usuario As String) As Integer
  overload: CONTROLADOR.ControladorInicio.ObtenerTipo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CONTROLADOR
  commentId: N:CONTROLADOR
  name: CONTROLADOR
  nameWithType: CONTROLADOR
  fullName: CONTROLADOR
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CONTROLADOR.ControladorInicio.Login*
  commentId: Overload:CONTROLADOR.ControladorInicio.Login
  name: Login
  nameWithType: ControladorInicio.Login
  fullName: CONTROLADOR.ControladorInicio.Login
- uid: CONTROLADOR.ControladorInicio.ObtenerTipo*
  commentId: Overload:CONTROLADOR.ControladorInicio.ObtenerTipo
  name: ObtenerTipo
  nameWithType: ControladorInicio.ObtenerTipo
  fullName: CONTROLADOR.ControladorInicio.ObtenerTipo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
