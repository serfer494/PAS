### YamlMime:ManagedReference
items:
- uid: MODELO.ModeloNuevoCliente
  commentId: T:MODELO.ModeloNuevoCliente
  id: ModeloNuevoCliente
  parent: MODELO
  children:
  - MODELO.ModeloNuevoCliente.AgregarNuevoCliente(System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: ModeloNuevoCliente
  nameWithType: ModeloNuevoCliente
  fullName: MODELO.ModeloNuevoCliente
  type: Class
  source:
    remote:
      path: MODELO/ModeloNuevoCliente.cs
      branch: CuartoEntregable
      repo: https://github.com/serfer494/PAS.git
    id: ModeloNuevoCliente
    path: ModeloNuevoCliente.cs
    startLine: 14
  assemblies:
  - MODELO
  namespace: MODELO
  summary: "\nEl modelo de &quot;Nuevo Cliente&quot; se encarga de ingresar registros a la tabla de \n&quot;Paciente&quot; de la base de datos &quot;BDPAS&quot; destinada al sisema.\n"
  example: []
  syntax:
    content: public class ModeloNuevoCliente
    content.vb: Public Class ModeloNuevoCliente
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MODELO.ModeloNuevoCliente.AgregarNuevoCliente(System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,System.String,System.String)
  commentId: M:MODELO.ModeloNuevoCliente.AgregarNuevoCliente(System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,System.String,System.String)
  id: AgregarNuevoCliente(System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,System.String,System.String)
  parent: MODELO.ModeloNuevoCliente
  langs:
  - csharp
  - vb
  name: AgregarNuevoCliente(String, String, String, DateTime, String, String, String, String, String)
  nameWithType: ModeloNuevoCliente.AgregarNuevoCliente(String, String, String, DateTime, String, String, String, String, String)
  fullName: MODELO.ModeloNuevoCliente.AgregarNuevoCliente(System.String, System.String, System.String, System.DateTime, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: MODELO/ModeloNuevoCliente.cs
      branch: CuartoEntregable
      repo: https://github.com/serfer494/PAS.git
    id: AgregarNuevoCliente
    path: ModeloNuevoCliente.cs
    startLine: 18
  assemblies:
  - MODELO
  namespace: MODELO
  syntax:
    content: public void AgregarNuevoCliente(string nombre, string genero, string estadoCivil, DateTime fechaNacimiento, string escolaridad, string ocupacion, string telefono, string email, string motivos)
    parameters:
    - id: nombre
      type: System.String
    - id: genero
      type: System.String
    - id: estadoCivil
      type: System.String
    - id: fechaNacimiento
      type: System.DateTime
    - id: escolaridad
      type: System.String
    - id: ocupacion
      type: System.String
    - id: telefono
      type: System.String
    - id: email
      type: System.String
    - id: motivos
      type: System.String
    content.vb: Public Sub AgregarNuevoCliente(nombre As String, genero As String, estadoCivil As String, fechaNacimiento As Date, escolaridad As String, ocupacion As String, telefono As String, email As String, motivos As String)
  overload: MODELO.ModeloNuevoCliente.AgregarNuevoCliente*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: MODELO
  commentId: N:MODELO
  name: MODELO
  nameWithType: MODELO
  fullName: MODELO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MODELO.ModeloNuevoCliente.AgregarNuevoCliente*
  commentId: Overload:MODELO.ModeloNuevoCliente.AgregarNuevoCliente
  name: AgregarNuevoCliente
  nameWithType: ModeloNuevoCliente.AgregarNuevoCliente
  fullName: MODELO.ModeloNuevoCliente.AgregarNuevoCliente
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
